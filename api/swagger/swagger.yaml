swagger: "2.0"
info:
  version: "1.0.0"
  title: Schedule API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /v1
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
  - application/octet-stream
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /schedule/event:
    # binds a127 app logic to a route
    x-swagger-router-controller: "schedule/event"
    get:
      tags:
      - "schedule"
      - "event"
      description: Returns 'Event' of Schedule by Seller
      operationId: getEvents
      parameters:
        - name: sellerId
          in: query
          description: The schedule of the seller
          required: true
          type: string
        - name: "eventId"
          in: "query"
          description: "The schedule of the seller"
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ScheduleResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
      - "schedule"
      - "event"
      summary: Create 'Event' of Schedule by Seller
      operationId: "createEvent"
      parameters:
        - name: "sellerId"
          in: "query"
          description: "The schedule of the seller"
          required: true
          type: string
        - name: "body"
          in: "body"
          required: false
          schema:
            $ref: "#/definitions/Event"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ScheduleResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
      - "schedule"
      - "event"
      summary: Update 'Event' of Schedule by Seller
      operationId: "updateEvent"
      parameters:
        - name: "eventId"
          in: "query"
          description: "The schedule of the seller"
          required: true
          type: string
        - name: "body"
          in: "body"
          required: false
          schema:
            $ref: "#/definitions/Event"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ScheduleResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /schedule/event/change-status:
    x-swagger-router-controller: "schedule/event"
    put:
      tags:
      - "schedule"
      - "event"
      - "status"
      summary: Enable or disable an 'Event'
      operationId: "eventStatus"
      parameters:
        - name: "eventId"
          in: "query"
          description: "The schedule of the seller"
          required: true
          type: string
        - name: "isActive"
          in: "query"
          description: "The schedule of the seller"
          required: true
          type: boolean
          default: true
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ScheduleResponse"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Event:
    type: "object"
    properties:
      startDatetime:
        type: "string"
        default: "2017-12-31T00:00:01.01Z"
      endDatetime:
        type: "string"
        default: "2017-12-31T23:59:59.59Z"
      eventType:
        type: "string"
        default: lack_of_delivery_staff
        enum:
          - lack_of_delivery_staff
          - connection issues
          - overloaded
          - holidays
      isActive:
        type: "boolean"
        default: true
  ScheduleResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
